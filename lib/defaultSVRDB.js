// Copyright 2016 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

var lowlevel = require( "../lowlevel" );

var oicSVRDBServerJustWorksDat = [
  0xbf, 0x63, 0x61, 0x63, 0x6c, 0x59, 0x01, 0xdd, 0xa4, 0x67, 0x61, 0x63, 0x6c, 0x69, 0x73, 0x74,
  0x32, 0x84, 0xa4, 0x65, 0x61, 0x63, 0x65, 0x69, 0x64, 0x01, 0x67, 0x73, 0x75, 0x62, 0x6a, 0x65,
  0x63, 0x74, 0xa1, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x6a, 0x61, 0x6e, 0x6f,
  0x6e, 0x2d, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
  0x73, 0x83, 0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x68, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x72, 0x65,
  0x73, 0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x66, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x64, 0xa1, 0x64,
  0x68, 0x72, 0x65, 0x66, 0x66, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x70, 0x6a, 0x70, 0x65, 0x72, 0x6d,
  0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x02, 0xa4, 0x65, 0x61, 0x63, 0x65, 0x69, 0x64, 0x02, 0x67,
  0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xa1, 0x68, 0x63, 0x6f, 0x6e, 0x6e, 0x74, 0x79, 0x70,
  0x65, 0x6a, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x72, 0x65, 0x73,
  0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x83, 0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x68, 0x2f, 0x6f,
  0x69, 0x63, 0x2f, 0x72, 0x65, 0x73, 0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x66, 0x2f, 0x6f, 0x69,
  0x63, 0x2f, 0x64, 0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x66, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x70,
  0x6a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x02, 0xa4, 0x65, 0x61, 0x63,
  0x65, 0x69, 0x64, 0x03, 0x67, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xa1, 0x68, 0x63, 0x6f,
  0x6e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x6a, 0x61, 0x6e, 0x6f, 0x6e, 0x2d, 0x63, 0x6c, 0x65, 0x61,
  0x72, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x81, 0xa1, 0x64, 0x68, 0x72,
  0x65, 0x66, 0x6d, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x63, 0x2f, 0x64, 0x6f, 0x78, 0x6d,
  0x6a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x0e, 0xa4, 0x65, 0x61, 0x63,
  0x65, 0x69, 0x64, 0x04, 0x67, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0xa1, 0x68, 0x63, 0x6f,
  0x6e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x6a, 0x61, 0x75, 0x74, 0x68, 0x2d, 0x63, 0x72, 0x79, 0x70,
  0x74, 0x69, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x82, 0xa1, 0x64, 0x68, 0x72,
  0x65, 0x66, 0x6d, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x63, 0x2f, 0x64, 0x6f, 0x78, 0x6d,
  0xa1, 0x64, 0x68, 0x72, 0x65, 0x66, 0x6e, 0x2f, 0x6f, 0x69, 0x63, 0x2f, 0x73, 0x65, 0x63, 0x2f,
  0x72, 0x6f, 0x6c, 0x65, 0x73, 0x6a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
  0x0e, 0x6a, 0x72, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x78, 0x24, 0x30, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30,
  0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
  0x30, 0x30, 0x62, 0x72, 0x74, 0x81, 0x6a, 0x6f, 0x69, 0x63, 0x2e, 0x72, 0x2e, 0x61, 0x63, 0x6c,
  0x32, 0x62, 0x69, 0x66, 0x81, 0x6f, 0x6f, 0x69, 0x63, 0x2e, 0x69, 0x66, 0x2e, 0x62, 0x61, 0x73,
  0x65, 0x6c, 0x69, 0x6e, 0x65, 0x65, 0x70, 0x73, 0x74, 0x61, 0x74, 0x58, 0x77, 0xa9, 0x63, 0x64,
  0x6f, 0x73, 0xa2, 0x61, 0x73, 0x01, 0x61, 0x70, 0xf4, 0x64, 0x69, 0x73, 0x6f, 0x70, 0xf4, 0x62,
  0x63, 0x6d, 0x02, 0x62, 0x74, 0x6d, 0x00, 0x62, 0x6f, 0x6d, 0x04, 0x62, 0x73, 0x6d, 0x04, 0x6a,
  0x72, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x78, 0x24, 0x30, 0x30, 0x30, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30,
  0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
  0x62, 0x72, 0x74, 0x81, 0x6b, 0x6f, 0x69, 0x63, 0x2e, 0x72, 0x2e, 0x70, 0x73, 0x74, 0x61, 0x74,
  0x62, 0x69, 0x66, 0x81, 0x6f, 0x6f, 0x69, 0x63, 0x2e, 0x69, 0x66, 0x2e, 0x62, 0x61, 0x73, 0x65,
  0x6c, 0x69, 0x6e, 0x65, 0x64, 0x64, 0x6f, 0x78, 0x6d, 0x58, 0xd5, 0xbf, 0x64, 0x6f, 0x78, 0x6d,
  0x73, 0x81, 0x00, 0x66, 0x6f, 0x78, 0x6d, 0x73, 0x65, 0x6c, 0x00, 0x63, 0x73, 0x63, 0x74, 0x01,
  0x65, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0xf4, 0x6a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x75, 0x75,
  0x69, 0x64, 0x78, 0x24, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x2d, 0x31, 0x32, 0x33,
  0x34, 0x2d, 0x31, 0x32, 0x33, 0x34, 0x2d, 0x31, 0x32, 0x33, 0x34, 0x2d, 0x31, 0x32, 0x33, 0x34,
  0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x6c, 0x64, 0x65, 0x76, 0x6f, 0x77, 0x6e, 0x65,
  0x72, 0x75, 0x75, 0x69, 0x64, 0x78, 0x24, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2d,
  0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x6a, 0x72, 0x6f, 0x77, 0x6e,
  0x65, 0x72, 0x75, 0x75, 0x69, 0x64, 0x78, 0x24, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
  0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d, 0x30, 0x30, 0x30, 0x30, 0x2d,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x62, 0x72, 0x74, 0x81,
  0x6a, 0x6f, 0x69, 0x63, 0x2e, 0x72, 0x2e, 0x64, 0x6f, 0x78, 0x6d, 0x62, 0x69, 0x66, 0x81, 0x6f,
  0x6f, 0x69, 0x63, 0x2e, 0x69, 0x66, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0xff,
  0xff
];

module.exports = function defaultSVRDB() {
  var result, index, uuid;
  var uuidReceptacle = {};

  if ( !lowlevel.OCGenerateUuid( uuidReceptacle ) ) {
    throw new Error( "Failed to generate device UUID" );
  }

  if ( !lowlevel.OCConvertUuidToString( uuidReceptacle.uuidArray, uuidReceptacle ) ) {
    throw new Error( "Failed to convert device UUID to string" );
  }

  uuid = uuidReceptacle.uuidString;

  // Clone the file contents.
  result = oicSVRDBServerJustWorksDat.slice( 0 );

  // Splice in the generated UUID.
  for ( index = 0; index < uuid.length; index++ ) {
    result[ index + 0x294 ] = uuid.charCodeAt( index );
  }

  // Return as a Buffer.
  return new Buffer( result );
};
